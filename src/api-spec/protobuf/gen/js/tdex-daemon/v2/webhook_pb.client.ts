/* eslint-disable */
// @generated by protobuf-ts 2.9.0 with parameter add_pb_suffix,eslint_disable,ts_nocheck,keep_enum_prefix,long_type_number
// @generated from protobuf file "tdex-daemon/v2/webhook.proto" (package "tdex_daemon.v2", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { WebhookService } from "./webhook_pb";
import type { ListWebhooksResponse } from "./webhook_pb";
import type { ListWebhooksRequest } from "./webhook_pb";
import type { RemoveWebhookResponse } from "./webhook_pb";
import type { RemoveWebhookRequest } from "./webhook_pb";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { AddWebhookResponse } from "./webhook_pb";
import type { AddWebhookRequest } from "./webhook_pb";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * *
 * Service for operators to manage webhooks.
 *
 * @generated from protobuf service tdex_daemon.v2.WebhookService
 */
export interface IWebhookServiceClient {
    /**
     * Adds a webhook registered for some kind of event.
     *
     * @generated from protobuf rpc: AddWebhook(tdex_daemon.v2.AddWebhookRequest) returns (tdex_daemon.v2.AddWebhookResponse);
     */
    addWebhook(input: AddWebhookRequest, options?: RpcOptions): UnaryCall<AddWebhookRequest, AddWebhookResponse>;
    /**
     * Removes some previously added webhook.
     *
     * @generated from protobuf rpc: RemoveWebhook(tdex_daemon.v2.RemoveWebhookRequest) returns (tdex_daemon.v2.RemoveWebhookResponse);
     */
    removeWebhook(input: RemoveWebhookRequest, options?: RpcOptions): UnaryCall<RemoveWebhookRequest, RemoveWebhookResponse>;
    /**
     * Returns registered webhooks
     *
     * @generated from protobuf rpc: ListWebhooks(tdex_daemon.v2.ListWebhooksRequest) returns (tdex_daemon.v2.ListWebhooksResponse);
     */
    listWebhooks(input: ListWebhooksRequest, options?: RpcOptions): UnaryCall<ListWebhooksRequest, ListWebhooksResponse>;
}
/**
 * *
 * Service for operators to manage webhooks.
 *
 * @generated from protobuf service tdex_daemon.v2.WebhookService
 */
export class WebhookServiceClient implements IWebhookServiceClient, ServiceInfo {
    typeName = WebhookService.typeName;
    methods = WebhookService.methods;
    options = WebhookService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Adds a webhook registered for some kind of event.
     *
     * @generated from protobuf rpc: AddWebhook(tdex_daemon.v2.AddWebhookRequest) returns (tdex_daemon.v2.AddWebhookResponse);
     */
    addWebhook(input: AddWebhookRequest, options?: RpcOptions): UnaryCall<AddWebhookRequest, AddWebhookResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddWebhookRequest, AddWebhookResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Removes some previously added webhook.
     *
     * @generated from protobuf rpc: RemoveWebhook(tdex_daemon.v2.RemoveWebhookRequest) returns (tdex_daemon.v2.RemoveWebhookResponse);
     */
    removeWebhook(input: RemoveWebhookRequest, options?: RpcOptions): UnaryCall<RemoveWebhookRequest, RemoveWebhookResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveWebhookRequest, RemoveWebhookResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Returns registered webhooks
     *
     * @generated from protobuf rpc: ListWebhooks(tdex_daemon.v2.ListWebhooksRequest) returns (tdex_daemon.v2.ListWebhooksResponse);
     */
    listWebhooks(input: ListWebhooksRequest, options?: RpcOptions): UnaryCall<ListWebhooksRequest, ListWebhooksResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListWebhooksRequest, ListWebhooksResponse>("unary", this._transport, method, opt, input);
    }
}
